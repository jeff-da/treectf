pi="3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568127145263560827785771342757789609173637178721468440901224953430146549585371050792279689258923542019956112129021960864034418159813629774771309960518707211349999998372978049951059731732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303598253490428755468731159562863882353787593751957781857780532171226806613001927876611195909216420198938095257201065485863278865936153381827968230301952035301852968995773622599413891249721775283479131515574857242454150695950829533116861727855889075098381754637464939319255060400927701671139009848824012858361603563707660104710181942955596198946767837449448255379774726847104047534646208046684259069491293313677028989152104752162056966024058038150193511253382430035587640247496473263914199272604269922796782354781636009341721641219924586315030286182974555706749838505494588586926995690927210797509302955321165344987202755960236480665499119881834797753566369807426542527862551818417574672890977772793800081647060016145249192173217214772350"

# "description": "We heard you like <code>pies</code> -- oh by the way, that's <code>328 480 982 2306</code>. We decided to cook some more: what is <code>306 823 982 982 78 280 640 938 647 982 865 67 13 651 982 11 306 13 11 67 70 823 798 480 513 70 865 937 328 480 982 844</code>?"

# "hint": "It's a pretty boring life, you know, to find these digits in a <a href='http://www.geom.uiuc.edu/~huberty/math5337/groupe/digits.html' target='_blank'>haystack.</a>"

# each character's ascii value C is encoded as a string that matches pi[c: c+m]
# m is chosen so that the substring pi[c:c+m] does not appear before index C (so does not appear in pi[:c])
# this way, we have that pi.index(pi[c:c+m]) = c


flag = "treeCTF{welcome_to_cardinal.pie}"

for c in flag:
	c = ord(c)
	c2 = c
	s = pi[c2]
	# finds the shortest substring starting at index c that would index to the right place in the decimal expansion of pi
	while pi.index(s) != c:
		c2 += 1
		s += pi[c2]

	print(s)


# decode

# f = open("../life_of_pi.txt", "r").read().strip().split('\n')

# print(''.join(chr(pi.index(i)) for i in f))